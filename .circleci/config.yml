version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1
  slack: circleci/slack@3.4.2

workflows:
  lint:
    jobs:
      - lint:
          context: aws
      - build-and-deploy-charms-on-lxd:
          context: aws
          requires:
            - lint

jobs:
  lint:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          command: pip install tox
      - run:
          name: Run Lint
          command: |
            make lint

  build-and-deploy-charms-on-lxd:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - checkout

      - run:
          name: "Install snapd"
          command: |
            sudo apt-get update
            sudo apt-get install --only-upgrade -y snapd
      - run:
          name: "Install charmcraft"
          command: |
            sudo snap install charmcraft --beta
      - run:
          name: "Install LXD"
          command: |
            sudo apt-get purge lxd lxd-client lxcfs
            sudo snap install lxd
            sudo lxd init --auto
            sleep 5
            sudo /snap/bin/lxd.lxc network set lxdbr0 ipv6.address none
      - run:
          name: "Install Juju"
          command: |
            sudo apt-get purge juju
            sudo snap install juju --classic
      - run:
          name: "Install Juju wait"
          command: |
            sudo snap install juju-wait --classic
      - run:
          name: "clone charms"
          command: |
            git clone git@github.com:omnivector-solutions/slurm-charms.git
            rm ./slurm-charms/charm-slurmdbd/requirements.txt
            echo -e "git+https://github.com/omnivector-solutions/slurm-ops-manager.git@dev \nops \ngit+https://github.com/omnivector-solutions/interface-mysql.git@master" > ./slurm-charms/charm-slurmdbd/requirements.txt
            cp -r slurm_ops_manager/* slurm-charms/charm-slurmdbd/src
            mv slurm-charms/* .
            make charms
      - run:
          name: "pull credentials from s3"
          no_output_timeout: 20m
          command: |
            aws s3 cp s3://omnivector-cicd/juju-local/juju-local.tar.gz .
            tar -xzvf juju-local.tar.gz
            export JUJU_DATA=`pwd`/.local/share/juju
            echo "rats" | /snap/bin/juju status
            /snap/bin/juju add-model circleci
            make deploy-bionic-bundle-on-lxd-from-local-with-snap  

      - run:
          name: "show models"
          no_output_timeout: 20m
          command: |
            export JUJU_DATA=`pwd`/.local/share/juju
            echo "rats" | /snap/bin/juju status
            /snap/bin/juju models
            make deploy-bionic-bundle-on-lxd-from-local-with-snap
      - run:
          name: "Wait for deployment status"
          no_output_timeout: 20m
          command: |
            aws s3 cp s3://omnivector-cicd/juju-local/juju-local.tar.gz .
            tar -xzvf juju-local.tar.gz
            export JUJU_DATA=`pwd`/.local/share/juju
            echo "rats" | /snap/bin/juju status
            export PATH=$PATH:/snap/bin
            /snap/bin/juju switch circleci
            /snap/bin/juju status
            /snap/bin/juju-wait -w -t 1150
      - run:
          name: "show juju status"
          command: |
            export JUJU_DATA=`pwd`/.local/share/juju
            echo "rats" | /snap/bin/juju status
            /snap/bin/juju switch circleci
            /snap/bin/juju status
          when: always

      - run:
          name: "remove machines"
          command: |
            export JUJU_DATA=`pwd`/.local/share/juju
            echo "rats" | /snap/bin/juju status
            /snap/bin/juju switch circleci
            /snap/bin/juju remove-machine {0..4} --force
          when: always
      - run:
          name: "remove applications"
          command: |
            export JUJU_DATA=`pwd`/.local/share/juju
            echo "rats" | /snap/bin/juju status
            /snap/bin/juju switch circleci
            /snap/bin/juju status
            /snap/bin/juju remove-application slurmdbd slurmctld slurmd slurmrestd percona-cluster
          when: always
      - run:
          name: "destroy models"
          command: |
            export JUJU_DATA=`pwd`/.local/share/juju
            echo "rats" | /snap/bin/juju status
            /snap/bin/juju destroy-model circleci -y
          when: always
