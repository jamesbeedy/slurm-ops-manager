# slurm.conf file generated by Juju.
ClusterName={{ clustername }}

# active controller
{% if active_controller_hostname %}
ControlMachine={{ active_controller_hostname }}
ControlAddr={{ active_controller_ingress_address }}
{% elif active_controller_ingress_address %}
ControlMachine={{ active_controller_ingress_address }}
ControlAddr={{ active_controller_ingress_address }}
{% endif %}

# backup controller
{% if backup_controller_hostname %}
BackupController={{ backup_controller_hostname }}
BackupAddr={{ backup_controller_ingress_address }}
{% elif backup_controller_ingress_address %}
BackupController={{ backup_controller_ingress_address }}
BackupAddr={{ backup_controller_ingress_address }}
{% endif %}

# elasticsearch configuration

{% if elastic_search_address  %}
JobCompType=jobcomp/elasticsearch
JobCompLoc={{elasticsearch_address}}
JobCompParams=timeout=5
{% endif %}


AuthType=auth/munge
AuthInfo="socket={{ munge_socket }}"

CryptoType=crypto/munge

MailProg={{ mail_prog }}

SlurmUser={{ slurm_user }}
SlurmdUser={{ slurm_user }}

SlurmctldPort=6817
SlurmdPort=6818

SlurmctldPidFile={{ slurmctld_pid_file }}
SlurmdPidFile={{ slurmd_pid_file }}

SlurmctldLogFile={{ slurmctld_log_file }}
SlurmdLogFile={{ slurmd_log_file }}

SlurmdSpoolDir={{ slurm_spool_dir }}
StateSaveLocation={{ slurm_state_dir }}

PluginDir={{ slurm_plugin_dir }}

PlugStackConfig={{ slurm_plugstack_conf }}

# SLURMDBD CONFIGURED ON {{ slurmdbd_hostname }}
AccountingStorageType=accounting_storage/slurmdbd
JobAcctGatherType=jobacct_gather/linux
AccountingStorageHost={{ slurmdbd_hostname }}
AccountingStoragePort={{ slurmdbd_port }}
AccountingStoragePass={{ munge_socket }}

# User specified config
{{custom_config}}

{{partition_config}}


# INCLUDE CLUSTER SPECIFIC CONFIGURATION OVERRIDE
#include /etc/slurm/slurm-%c.conf

# GRES type
GresTypes=gpu 

# COMPUTE NODES 
{% for node in nodes %}
{{node.inventory}}
{%- endfor -%}
{% for partition, values in partitions.items() %}
PartitionName={{ partition }} Nodes={{ values.hosts|join(',') }} Default={{ 'YES' if values.default else 'NO' }} State=UP
{% endfor %}
